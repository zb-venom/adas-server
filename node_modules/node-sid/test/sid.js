var assert = require("assert"),
      _ = require('lodash');

describe('SID Generation', function(){

    it('should generate a supportid part with 5 digits', function() {
      var part = require('..')().create();
      assert.equal(part.length,6);
    });
    
    it('should generate a supportid part with a length of 8 digits (defined in options)', function() {
      var part = require('..')({len:8}).create();
      assert.equal(part.length,8);
    });
    
    it('should generate a supportid part with a length of 8 digits (defined in create())', function() {
      var part = require('..')().create('',8);
      assert.equal(part.length,8);
    });

    it('should generate a supportid part with a service-prefix', function() {
      var part = require('..')().create('SE');
      assert.equal(part.length,9);
    });
    
    it('should generate a series of 10000 unique ids', function() {
      var sid = require('..')();

      var vals = _.map(_.range(10000),function(val) {
        var part = sid.create();
        return part;
      });
      assert.equal(vals.length,_.uniq(vals).length);
    });

    it('should generate a supportid path for three services', function() {
      var sid = require('..')();
      var path = sid.create('FI') + '.' + sid.create('SE') + '.' + sid.create('TH');
      assert.equal(path.length,29);
    });

});
